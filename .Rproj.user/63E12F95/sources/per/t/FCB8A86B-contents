#' Indent multiple strings
#'
#' @description
#' `str_indent()` adds a space wherever a lowercase letter is followed by an 
#' uppercase letter, with modifiable functionality for special cases.
#'
#' By changing the parameter `split_style`, the placement of splits can be 
#' modified to the following styles:
#' `acronyms`: splits at lowercase-uppercase and between two uppercase letters 
#' followed by lowercase,
#' `allcaps`: splits between all consecutive uppercase letters
#' `default`: splits only when a lowercase letter is succeeded by an uppercase letter
#' `everything`: splits between every character
#'
#' @export
#' @examples
#' input <- "XMLHTTPRequestAndHTMLParser"
#' # Default splitting
#' str_spaceout(input, split_style = "default")
#' # Split acronyms
#' str_spaceout(input, split_style = "acronyms")
#' # Split all consecutive uppercase letters
#' str_spaceout(input, split_style = "allcaps")
#' # Split every character
#' str_spaceout(input, split_style = "everything")
#'

# Based off of this code from Colin Fraser here:
# https://github.com/tidyverse/stringr/issues/480
# which I edited to not call any other packages.

str_indent <- function(x, indent_level = 3, indent_character = ' ') {
  # If vector not atomic, turns it into a single string separated by newlines
  if (length(x)>=2) {
    xcat <- paste(x, collapse = "\n")
  }
  if (indent_level < 0) {
    stop("Invalid indent level, indent_level must be zero or positive.")
  }
  # Create a "tab" string out of 3 spaces or other character
  indent <- paste(rep(indent_character, indent_level), collapse = '')
  cat(gsub("(?m)^", indent, xcat, perl = TRUE))
  # perl must be TRUE to use regular expressions in baser
}

